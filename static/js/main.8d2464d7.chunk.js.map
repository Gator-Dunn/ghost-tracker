{"version":3,"sources":["constants.js","reducers/constants.js","reducers/useGhosts.js","components/Ghosts.js","components/Evidence.js","components/Reset.js","reducers/useEvidence.js","App.js","reportWebVitals.js","index.js"],"names":["STATUS","unconfirmed","icon","text","confirmed","excluded","EVIDENCE_MAP","emf","fingerprints","freezing","orbs","writing","box","EVIDENCE_NAMES","Object","values","GHOSTS","entries","map","key","name","statusIcon","statusText","evidence","valid","GHOST_NAMES","g","INITIAL_STATE","all","status","ghosts","validGhosts","invalid","actionTypes","reducer","state","type","payload","filter","ghost","includes","length","Ghosts","dispatch","filterGhosts","toggleGhost","toggleGhostEvidence","ghostMap","React","useMemo","ghostName","sort","a","b","localeCompare","useEffect","onClick","handleClick","className","Evidence","incrementStatus","evidenceName","e","Reset","resetEvidence","resetGhosts","addWithoutDuplicates","existingArray","newItem","Set","flat","alreadySet","every","validEvidence","payloadExcluded","App","useReducer","useEvidence","isValid","useGhosts","data-testid","pkgJson","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d2464d7.chunk.js","sourcesContent":["export const STATUS = {\r\n  unconfirmed: {\r\n    icon: \"⚪\",\r\n    text: \"unconfirmed\",\r\n  },\r\n  confirmed: {\r\n    icon: \"✔️\",\r\n    text: \"confirmed\",\r\n  },\r\n  excluded: {\r\n    icon: \"❌\",\r\n    text: \"excluded\",\r\n  },\r\n};\r\n\r\nexport const EVIDENCE_MAP = {\r\n  emf: \"EMF Level 5\",\r\n  fingerprints: \"Fingerprints\",\r\n  freezing: \"Freezing\",\r\n  orbs: \"Ghost Orbs\",\r\n  writing: \"Ghost Writing\",\r\n  box: \"Spirit Box\",\r\n};\r\n\r\nexport const EVIDENCE_NAMES = Object.values(EVIDENCE_MAP);\r\n\r\nexport const EVIDENCE = Object.entries(EVIDENCE_MAP).map(([key, name]) => ({\r\n  key,\r\n  name,\r\n  statusIcon: STATUS.unconfirmed.icon,\r\n  statusText: STATUS.unconfirmed.text,\r\n}));\r\n\r\nexport const GHOSTS = [\r\n  {\r\n    name: \"banshee\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.freezing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"demon\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"jinn\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"mare\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"oni\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"phantom\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"poltergeist\",\r\n    evidence: [EVIDENCE_MAP.orbs, EVIDENCE_MAP.fingerprints, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"revenant\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"shade\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"spirit\",\r\n    evidence: [\r\n      EVIDENCE_MAP.box,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"wraith\",\r\n    evidence: [\r\n      EVIDENCE_MAP.freezing,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.box,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"yurei\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n];\r\n\r\nexport const GHOST_NAMES = GHOSTS.map((g) => g.name);\r\n","import {\r\n  EVIDENCE_NAMES,\r\n  GHOSTS,\r\n  GHOST_NAMES,\r\n  STATUS,\r\n} from \"../constants\";\r\n\r\nexport const INITIAL_STATE = {\r\n  evidence: {\r\n    all: EVIDENCE_NAMES,\r\n    confirmed: [],\r\n    excluded: [],\r\n    unconfirmed: EVIDENCE_NAMES,\r\n    status: STATUS,\r\n    ghosts: GHOSTS,\r\n    validGhosts: GHOST_NAMES,\r\n  },\r\n  ghosts: {\r\n    all: GHOST_NAMES,\r\n    valid: GHOST_NAMES,\r\n    invalid: [],\r\n    evidence: GHOSTS,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  filter: \"FILTER_GHOSTS_BY_EVIDENCE\",\r\n  reset: \"RESET_GHOSTS\",\r\n  toggle: \"TOGGLE_GHOST_STATUS\",\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE.ghosts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.filter: {\r\n      const valid = state.all.filter((ghost) => payload.includes(ghost));\r\n      return {\r\n        ...state,\r\n        valid,\r\n        invalid: state.all.filter((ghost) => !valid.includes(ghost)),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.ghosts;\r\n    }\r\n    case actionTypes.toggle: {\r\n      if (state.invalid.includes(payload)) {\r\n        return {\r\n          ...state,\r\n          valid: [payload],\r\n          invalid: state.all.filter((g) => g !== payload),\r\n        };\r\n      }\r\n      if (state.valid.length === 1) {\r\n        return {\r\n          ...state,\r\n          valid: state.all,\r\n          invalid: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        valid: [payload],\r\n        invalid: state.all.filter((g) => g !== payload),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useGhosts = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.ghosts);\r\n\r\n  const isValid = (payload) => state.valid.includes(payload);\r\n\r\n  const toggleGhost = (payload) =>\r\n    dispatch({ payload, type: actionTypes.toggle });\r\n\r\n  const filterGhosts = (payload) =>\r\n    dispatch({ payload, type: actionTypes.filter });\r\n\r\n  const resetGhosts = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    dispatch,\r\n    filterGhosts,\r\n    isValid,\r\n    resetGhosts,\r\n    state,\r\n    toggleGhost,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { actionTypes } from '../reducers/useGhosts';\r\n\r\nexport const Ghosts = ({\r\n  ghosts: { dispatch, filterGhosts, state, toggleGhost },\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence\r\n  },\r\n}) => {\r\n  const ghostMap = React.useMemo(() => {\r\n    const valid = state.valid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"valid\",\r\n    }));\r\n    const invalid = state.invalid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"invalid\",\r\n    }));\r\n    const all = [...valid, ...invalid].sort((a, b) =>\r\n      a.ghostName.localeCompare(b.ghostName)\r\n    );\r\n    return all;\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n      dispatch({payload: validGhosts, type: actionTypes.filter });\r\n  }, [dispatch, validGhosts]);\r\n\r\n  const handleClick = (ghost) => {\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  }\r\n\r\n  return ghostMap\r\n    ? ghostMap.map((ghost) => (\r\n        <span\r\n          key={ghost.ghostName}\r\n          onClick={() => handleClick(ghost)}\r\n          className={`Tag-ghost-${ghost.status}`}\r\n        >\r\n          {ghost.ghostName}\r\n        </span>\r\n      ))\r\n    : null;\r\n};\r\n","import React from \"react\";\r\nimport { STATUS } from \"../constants\";\r\n\r\nexport const Evidence = ({evidence: { state, incrementStatus }}) => {\r\n  const evidenceMap = React.useMemo(() => {\r\n    const confirmed = state.confirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.confirmed.icon,\r\n      statusText: STATUS.confirmed.text,\r\n    }));\r\n    const excluded = state.excluded.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.excluded.icon,\r\n      statusText: STATUS.excluded.text,\r\n    }));\r\n    const unconfirmed = state.unconfirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.unconfirmed.icon,\r\n      statusText: STATUS.unconfirmed.text,\r\n    }));\r\n    const all = [...confirmed, ...excluded, ...unconfirmed];\r\n    all.sort((a, b) => a.evidenceName.localeCompare(b.evidenceName));\r\n\r\n    return all;\r\n  }, [state]);\r\n\r\n  return evidenceMap.map((e, key) => (\r\n    <span\r\n      className=\"Evidence-item\"\r\n      onClick={() => incrementStatus(e.evidenceName)}\r\n      key={key}\r\n    >\r\n      <span className=\"Evidence-status\">{e.statusIcon}</span>\r\n      <span className={`Evidence-name-${e.statusText}`}>{e.evidenceName}</span>\r\n    </span>\r\n  ));\r\n};\r\n","import React from 'react';\r\n\r\nexport const Reset = ({ evidence: { resetEvidence }, ghosts: { resetGhosts }}) => {\r\n  const handleClick = () => {\r\n    resetEvidence();\r\n    resetGhosts();\r\n  }\r\n  return (\r\n    <button onClick={handleClick}>Reset</button>\r\n  )\r\n}","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  add: {\r\n    confirmed: \"ADD_CONFIRMED_EVIDENCE\",\r\n    excluded: \"ADD_EXCLUDED_EVIDENCE\",\r\n    unconfirmed: \"ADD_UNCONFIRMED_EVIDENCE\",\r\n  },\r\n  reset: \"RESET_EVIDENCE\",\r\n  toggleGhostEvidence: \"TOGGLE_GHOST_EVIDENCE\",\r\n  validate: \"VALIDATE_ALL_EVIDENCE\",\r\n};\r\n\r\nconst addWithoutDuplicates = (existingArray, newItem) => [\r\n  ...new Set([...existingArray, newItem]),\r\n];\r\n\r\nexport const reducer = (state = INITIAL_STATE.evidence, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.add.confirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: addWithoutDuplicates(state.confirmed, payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.excluded: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: addWithoutDuplicates(state.excluded, payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.unconfirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: addWithoutDuplicates(state.unconfirmed, payload),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.evidence;\r\n    }\r\n    case actionTypes.toggleGhostEvidence: {\r\n      const confirmed = state.ghosts\r\n        .filter((ghost) => ghost.name === payload.ghostName)\r\n        .map((ghost) => ghost.evidence)\r\n        .flat();\r\n\r\n      const alreadySet = confirmed.every((e) => state.confirmed.includes(e));\r\n\r\n      if (alreadySet) {\r\n        return {\r\n          ...state,\r\n          confirmed: [],\r\n          excluded: [],\r\n          unconfirmed: state.all,\r\n        };\r\n      }\r\n\r\n      const excluded = state.all.filter((e) => !confirmed.includes(e));\r\n\r\n      return {\r\n        ...state,\r\n        confirmed,\r\n        excluded,\r\n        unconfirmed: [],\r\n      };\r\n    }\r\n    case actionTypes.validate: {\r\n      const validEvidence = [\r\n        ...new Set(\r\n          state.ghosts\r\n            .filter((ghost) =>\r\n              state.confirmed.every((e) => ghost.evidence.includes(e))\r\n            )\r\n            .map((ghost) => ghost.evidence)\r\n            .flat()\r\n        ),\r\n      ];\r\n\r\n      if (validEvidence.length === 0) {\r\n        return state;\r\n      }\r\n\r\n      const validGhosts = [\r\n        state.ghosts\r\n          .filter((ghost) =>\r\n            state.confirmed.every((e) => ghost.evidence.includes(e))\r\n          )\r\n          .map((ghost) => ghost.name),\r\n      ].flat();\r\n\r\n      const payloadExcluded = (e) =>\r\n        e === payload && state.excluded.includes(payload);\r\n\r\n      const excluded = state.all.filter(\r\n        (e) => payloadExcluded(e) || !validEvidence.includes(e)\r\n      );\r\n\r\n      const unconfirmed = state.all.filter(\r\n        (e) =>\r\n          e.name !== payload &&\r\n          !state.confirmed.includes(e) &&\r\n          !excluded.includes(e)\r\n      );\r\n      const confirmed = state.all.filter(\r\n        (e) => !unconfirmed.includes(e) && !excluded.includes(e)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        excluded,\r\n        unconfirmed,\r\n        confirmed,\r\n        validGhosts,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useEvidence = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.evidence);\r\n\r\n  const incrementStatus = (payload) => {\r\n    if (state.confirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.excluded });\r\n    }\r\n\r\n    if (state.excluded.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.unconfirmed });\r\n    }\r\n\r\n    if (state.unconfirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.confirmed });\r\n    }\r\n\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const toggleGhostEvidence = (payload) => {\r\n    dispatch({ payload, type: actionTypes.toggleGhostEvidence });\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const resetEvidence = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    incrementStatus,\r\n    resetEvidence,\r\n    state,\r\n    toggleGhostEvidence,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport pkgJson from '../package.json';\r\nimport { Ghosts } from \"./components/Ghosts\";\r\nimport { Evidence } from \"./components/Evidence\";\r\nimport { Reset } from './components/Reset';\r\nimport { useGhosts } from \"./reducers/useGhosts\";\r\nimport { useEvidence } from \"./reducers/useEvidence\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const evidence = useEvidence();\r\n  const ghosts = useGhosts();\r\n  return (\r\n    evidence &&\r\n    ghosts && (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">Phasmophobia Evidence Matrix</header>\r\n        <section data-testid=\"test-evidence\" className=\"App-section-evidence\">\r\n          <Evidence\r\n            evidence={evidence}\r\n            ghosts={ghosts}\r\n          />\r\n        </section>\r\n        <section data-testid=\"test-ghosts\" className=\"App-section-ghosts\">\r\n          <Ghosts evidence={evidence} ghosts={ghosts} />\r\n        </section>\r\n        <section className=\"App-section-controls\">\r\n          <Reset ghosts={ghosts} evidence={evidence} />\r\n        </section>\r\n        <section className=\"App-section-version\">\r\n          beta version {pkgJson.version}\r\n        </section>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}