{"version":3,"sources":["DataProvider.js","constants.js","components/Ghosts.js","components/Evidence.js","App.js","reportWebVitals.js","index.js"],"names":["data","evidence","ghosts","invalidGhosts","loaded","selectedGhost","DataProvider","React","createContext","EVIDENCE","emf","fingerprints","freezing","orbs","writing","box","GHOSTS","name","valid","STATUSES","STATUS_STRINGS","Ghosts","setEvidence","useState","setSelectedGhost","useContext","isInvalidGhost","useCallback","ghost","includes","map","onClick","ghostEvidence","newEvidence","e","status","statusString","handleClick","className","Evidence","key","statusIndex","indexOf","length","newStatus","newStatusString","App","setGhosts","setInvalidGhosts","setLoaded","useEffect","Object","entries","filtered","filter","checkedEvidence","invertedEvidence","hasInvalidEvidence","some","hasValidEvidence","state","useMemo","Provider","value","data-testid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e95829c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst data = {\r\n  evidence: [],\r\n  ghosts: [],\r\n  invalidGhosts: [],\r\n  loaded: false,\r\n  selectedGhost: '',\r\n};\r\n\r\nexport const DataProvider = React.createContext(data);\r\n","export const EVIDENCE = {\r\n  emf: \"EMF Level 5\",\r\n  fingerprints: \"Fingerprints\",\r\n  freezing: \"Freezing\",\r\n  orbs: \"Ghost Orbs\",\r\n  writing: \"Ghost Writing\",\r\n  box: \"Spirit Box\",\r\n};\r\n\r\nexport const GHOSTS = [\r\n  {\r\n    name: \"banshee\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.fingerprints, EVIDENCE.freezing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"demon\",\r\n    evidence: [EVIDENCE.freezing, EVIDENCE.box, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"jinn\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.orbs, EVIDENCE.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"mare\",\r\n    evidence: [EVIDENCE.freezing, EVIDENCE.orbs, EVIDENCE.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"oni\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.box, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"phantom\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.freezing, EVIDENCE.orbs],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"poltergeist\",\r\n    evidence: [EVIDENCE.orbs, EVIDENCE.fingerprints, EVIDENCE.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"revenant\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.fingerprints, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"shade\",\r\n    evidence: [EVIDENCE.emf, EVIDENCE.orbs, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"spirit\",\r\n    evidence: [EVIDENCE.box, EVIDENCE.fingerprints, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"wraith\",\r\n    evidence: [EVIDENCE.freezing, EVIDENCE.fingerprints, EVIDENCE.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"yurei\",\r\n    evidence: [EVIDENCE.freezing, EVIDENCE.orbs, EVIDENCE.writing],\r\n    valid: true,\r\n  },\r\n];\r\n\r\nexport const STATUSES = [\"⚪\", \"✔️\", \"❌\"];\r\nexport const STATUS_STRINGS = [\"default\", \"active\", \"inverted\"];\r\n","import React from \"react\";\r\nimport { DataProvider } from \"../DataProvider\";\r\nimport { STATUSES, STATUS_STRINGS } from \"../constants\";\r\n\r\nexport const Ghosts = ({ setEvidence }) => {\r\n  const [selectedGhost, setSelectedGhost] = React.useState(\"\");\r\n  const { evidence, ghosts, invalidGhosts, loaded } = React.useContext(\r\n    DataProvider\r\n  );\r\n\r\n  const isInvalidGhost = React.useCallback(\r\n    (ghost) => {\r\n      return invalidGhosts && invalidGhosts.includes(ghost.name);\r\n    },\r\n    [invalidGhosts]\r\n  );\r\n\r\n  const handleClick = ({ evidence: ghostEvidence, name }) => {\r\n    const selected = selectedGhost === name;\r\n    let newEvidence = [];\r\n    if (!selected) {\r\n      newEvidence = evidence.map((e) => {\r\n        const status = ghostEvidence.includes(e.name);\r\n        return {\r\n          ...e,\r\n          status: status ? STATUSES[1] : STATUSES[0],\r\n          statusString: status ? STATUS_STRINGS[1] : STATUS_STRINGS[0],\r\n        };\r\n      });\r\n      setSelectedGhost(name);\r\n    } else {\r\n      newEvidence = evidence.map((e) => ({\r\n        ...e,\r\n        status: STATUSES[0],\r\n        statusString: STATUS_STRINGS[0],\r\n      }));\r\n      setSelectedGhost(\"\");\r\n    }\r\n\r\n    setEvidence(newEvidence);\r\n  };\r\n\r\n  return (\r\n    loaded &&\r\n    ghosts.map((ghost) => (\r\n      <span\r\n        key={ghost.name}\r\n        onClick={() => handleClick(ghost)}\r\n        className={`Tag-ghost-${isInvalidGhost(ghost) ? \"invalid\" : \"valid\"}`}\r\n      >\r\n        {ghost.name}\r\n      </span>\r\n    ))\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DataProvider } from \"../DataProvider\";\r\nimport { STATUSES, STATUS_STRINGS } from \"../constants\";\r\n\r\nexport const Evidence = ({setEvidence}) => {\r\n  const { evidence, loaded } = React.useContext(\r\n    DataProvider\r\n  );\r\n\r\n  const handleClick = (status, key) => {\r\n    const newEvidence = evidence.map((e) => {\r\n      const statusIndex =\r\n        STATUSES.indexOf(status) === STATUSES.length - 1\r\n          ? 0\r\n          : STATUSES.indexOf(status) + 1;\r\n\r\n      const newStatus = e.key === key ? STATUSES[statusIndex] : e.status;\r\n      const newStatusString =\r\n        e.key === key ? STATUS_STRINGS[statusIndex] : e.statusString;\r\n      return {\r\n        ...e,\r\n        status: newStatus,\r\n        statusString: newStatusString,\r\n      };\r\n    });\r\n\r\n    setEvidence(newEvidence);\r\n  };\r\n\r\n  return (\r\n    loaded && evidence.map(({ key, name, status, statusString }) => (\r\n      <span\r\n        className=\"Evidence-item\"\r\n        onClick={() => handleClick(status, key)}\r\n        key={key}\r\n      >\r\n        <span className=\"Evidence-status\">{status}</span>\r\n        <span className={`Evidence-name-${statusString}`}>{name}</span>\r\n      </span>\r\n    ))\r\n  )\r\n};\r\n","import React from \"react\";\nimport { DataProvider } from \"./DataProvider\";\nimport { Ghosts } from \"./components/Ghosts\";\nimport { Evidence } from \"./components/Evidence\";\nimport { EVIDENCE, GHOSTS, STATUSES, STATUS_STRINGS } from \"./constants\";\nimport \"./App.css\";\n\nfunction App() {\n  const [ghosts, setGhosts] = React.useState([]);\n  const [selectedGhost, setSelectedGhost] = React.useState(\"\");\n  const [invalidGhosts, setInvalidGhosts] = React.useState([]);\n  const [evidence, setEvidence] = React.useState([]);\n  const [loaded, setLoaded] = React.useState(false);\n\n  React.useEffect(() => {\n    setGhosts(GHOSTS);\n    setEvidence(\n      Object.entries(EVIDENCE).map(([key, name]) => ({\n        key,\n        name,\n        status: STATUSES[0],\n        statusString: \"default\",\n      }))\n    );\n    setLoaded(true);\n  }, []);\n\n  React.useEffect(() => {\n    const filtered = ghosts\n      .filter((ghost) => {\n        const checkedEvidence = evidence\n          .filter(({ status }) => status === STATUSES[1])\n          .map((e) => EVIDENCE[e.key]);\n\n        const invertedEvidence = evidence\n          .filter(({ status }) => status === STATUSES[2])\n          .map((e) => EVIDENCE[e.key]);\n\n        const hasInvalidEvidence = checkedEvidence.some(\n          (e) => !ghost.evidence.includes(e)\n        );\n\n        const hasValidEvidence = invertedEvidence.some((e) =>\n          ghost.evidence.includes(e)\n        );\n\n        return hasInvalidEvidence || hasValidEvidence;\n      })\n      .map((ghost) => ghost.name);\n\n    setInvalidGhosts(filtered);\n  }, [evidence, ghosts]);\n\n  const resetHandleClick = () => {\n    const newEvidence = evidence.map((e) => ({\n      ...e,\n      status: STATUSES[0],\n      statusString: STATUS_STRINGS[0],\n    }));\n    setSelectedGhost(\"\");\n    setEvidence(newEvidence);\n  };\n\n  const state = React.useMemo(() => {\n    return {\n      evidence,\n      ghosts,\n      invalidGhosts,\n      loaded,\n      selectedGhost,\n    };\n  }, [evidence, ghosts, invalidGhosts, loaded, selectedGhost]);\n\n  return (\n    loaded && (\n      <DataProvider.Provider value={state}>\n        <div className=\"App\">\n          <header className=\"App-header\">Phasmophobia Evidence Matrix</header>\n          <section data-testid=\"test-evidence\" className=\"App-section-evidence\">\n            <Evidence setEvidence={setEvidence} />\n          </section>\n          <section data-testid=\"test-ghosts\" className=\"App-section-ghosts\">\n            <Ghosts\n              setSelectedGhost={setSelectedGhost}\n              setEvidence={setEvidence}\n            />\n          </section>\n          <section className=\"App-section-controls\">\n            <button onClick={resetHandleClick}>Reset</button>\n          </section>\n        </div>\n      </DataProvider.Provider>\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}