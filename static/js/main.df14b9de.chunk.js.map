{"version":3,"sources":["constants.js","reducers/constants.js","reducers/useGhosts.js","components/Ghosts.js","components/Evidence.js","components/Reset.js","components/Secondary.js","reducers/useEvidence.js","App.js","reportWebVitals.js","index.js"],"names":["STATUS","unconfirmed","icon","text","confirmed","excluded","EVIDENCE_MAP","emf","fingerprints","freezing","orbs","writing","box","EVIDENCE_NAMES","Object","values","GHOSTS","entries","map","key","name","statusIcon","statusText","evidence","valid","GHOST_EVIDENCE_MAP","reduce","ghost","GHOST_NAMES","g","GHOST_NAME_MAP","ghosts","INITIAL_STATE","all","status","validGhosts","invalid","actionTypes","reducer","state","type","payload","filter","includes","length","Ghosts","dispatch","toggleGhost","toggleGhostEvidence","ghostMap","React","useMemo","ghostName","sort","a","b","localeCompare","useEffect","onClick","handleClick","className","Evidence","incrementStatus","evidenceName","e","Reset","resetEvidence","resetGhosts","data","wraith","icons","classes","description","phantom","revenant","jinn","banshee","demon","mare","poltergeist","s","Icon","classNames","list","c","Secondary","useState","selectedGhost","setSelectedGhost","highlighted","useCallback","Fragment","addWithoutDuplicates","existingArray","newItem","Set","flat","validEvidence","every","payloadExcluded","App","useReducer","useEvidence","filterGhosts","getGhost","isValid","useGhosts","backgroundClass","opacities","i","reverse","ghostCount","data-testid","pkgJson","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df14b9de.chunk.js","sourcesContent":["export const STATUS = {\r\n  unconfirmed: {\r\n    icon: \"⚪\",\r\n    text: \"unconfirmed\",\r\n  },\r\n  confirmed: {\r\n    icon: \"✔️\",\r\n    text: \"confirmed\",\r\n  },\r\n  excluded: {\r\n    icon: \"❌\",\r\n    text: \"excluded\",\r\n  },\r\n};\r\n\r\nexport const EVIDENCE_MAP = {\r\n  emf: \"EMF Level 5\",\r\n  fingerprints: \"Fingerprints\",\r\n  freezing: \"Freezing\",\r\n  orbs: \"Ghost Orbs\",\r\n  writing: \"Ghost Writing\",\r\n  box: \"Spirit Box\",\r\n};\r\n\r\nexport const EVIDENCE_NAMES = Object.values(EVIDENCE_MAP);\r\n\r\nexport const EVIDENCE = Object.entries(EVIDENCE_MAP).map(([key, name]) => ({\r\n  key,\r\n  name,\r\n  statusIcon: STATUS.unconfirmed.icon,\r\n  statusText: STATUS.unconfirmed.text,\r\n}));\r\n\r\nexport const GHOSTS = [\r\n  {\r\n    name: \"banshee\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.freezing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"demon\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"jinn\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"mare\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"oni\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"phantom\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"poltergeist\",\r\n    evidence: [EVIDENCE_MAP.orbs, EVIDENCE_MAP.fingerprints, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"revenant\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"shade\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"spirit\",\r\n    evidence: [\r\n      EVIDENCE_MAP.box,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"wraith\",\r\n    evidence: [\r\n      EVIDENCE_MAP.freezing,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.box,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"yurei\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n];\r\n\r\nexport const GHOST_EVIDENCE_MAP = GHOSTS.reduce(\r\n  (map, ghost) => ({\r\n    ...map,\r\n    [ghost.name]: ghost.evidence,\r\n  }),\r\n  {}\r\n);\r\n\r\nexport const GHOST_NAMES = GHOSTS.map((g) => g.name);\r\n\r\nexport const GHOST_NAME_MAP = GHOST_NAMES.reduce(\r\n  (ghosts, ghost) => ({\r\n    ...ghosts,\r\n    [ghost]: ghost,\r\n  }),\r\n  {}\r\n);\r\n","import {\r\n  EVIDENCE_NAMES,\r\n  GHOSTS,\r\n  GHOST_NAMES,\r\n  STATUS,\r\n} from \"../constants\";\r\n\r\nexport const INITIAL_STATE = {\r\n  evidence: {\r\n    all: EVIDENCE_NAMES,\r\n    confirmed: [],\r\n    excluded: [],\r\n    unconfirmed: EVIDENCE_NAMES,\r\n    status: STATUS,\r\n    ghosts: GHOSTS,\r\n    validGhosts: GHOST_NAMES,\r\n  },\r\n  ghosts: {\r\n    all: GHOST_NAMES,\r\n    valid: GHOST_NAMES,\r\n    invalid: [],\r\n    evidence: GHOSTS,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  filter: \"FILTER_GHOSTS_BY_EVIDENCE\",\r\n  reset: \"RESET_GHOSTS\",\r\n  toggle: \"TOGGLE_GHOST_STATUS\",\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE.ghosts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.filter: {\r\n      const valid = state.all.filter((ghost) => payload.includes(ghost));\r\n      return {\r\n        ...state,\r\n        valid,\r\n        invalid: state.all.filter((ghost) => !valid.includes(ghost)),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.ghosts;\r\n    }\r\n    case actionTypes.toggle: {\r\n      if (state.invalid.includes(payload)) {\r\n        return {\r\n          ...state,\r\n          valid: [payload],\r\n          invalid: state.all.filter((g) => g !== payload),\r\n        };\r\n      }\r\n      if (state.valid.length === 1) {\r\n        return {\r\n          ...state,\r\n          valid: state.all,\r\n          invalid: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        valid: [payload],\r\n        invalid: state.all.filter((g) => g !== payload),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useGhosts = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.ghosts);\r\n\r\n  const isValid = (payload) => state.valid.includes(payload);\r\n\r\n  const toggleGhost = (payload) =>\r\n    dispatch({ payload, type: actionTypes.toggle });\r\n\r\n  const filterGhosts = (payload) =>\r\n    dispatch({ payload, type: actionTypes.filter });\r\n\r\n  const resetGhosts = () => dispatch({ type: actionTypes.reset });\r\n\r\n  const getGhost = (payload) =>\r\n    state.all.filter((ghost) => ghost.name === payload);\r\n\r\n  return {\r\n    dispatch,\r\n    filterGhosts,\r\n    getGhost,\r\n    isValid,\r\n    resetGhosts,\r\n    state,\r\n    toggleGhost,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { actionTypes } from '../reducers/useGhosts';\r\n\r\nexport const Ghosts = ({\r\n  ghosts: { dispatch, state, toggleGhost },\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence\r\n  },\r\n}) => {\r\n  const ghostMap = React.useMemo(() => {\r\n    const valid = state.valid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"valid\",\r\n    }));\r\n    const invalid = state.invalid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"invalid\",\r\n    }));\r\n    const all = [...valid, ...invalid].sort((a, b) =>\r\n      a.ghostName.localeCompare(b.ghostName)\r\n    );\r\n    return all;\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n      dispatch({payload: validGhosts, type: actionTypes.filter });\r\n  }, [dispatch, validGhosts]);\r\n\r\n  const handleClick = (ghost) => {\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  }\r\n\r\n  return ghostMap\r\n    ? ghostMap.map((ghost) => (\r\n        <span\r\n          key={ghost.ghostName}\r\n          onClick={() => handleClick(ghost)}\r\n          className={`Tag-ghost-${ghost.status}`}\r\n        >\r\n          {ghost.ghostName}\r\n        </span>\r\n      ))\r\n    : null;\r\n};\r\n","import React from \"react\";\r\nimport { STATUS } from \"../constants\";\r\n\r\nexport const Evidence = ({evidence: { state, incrementStatus }}) => {\r\n  const evidenceMap = React.useMemo(() => {\r\n    const confirmed = state.confirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.confirmed.icon,\r\n      statusText: STATUS.confirmed.text,\r\n    }));\r\n    const excluded = state.excluded.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.excluded.icon,\r\n      statusText: STATUS.excluded.text,\r\n    }));\r\n    const unconfirmed = state.unconfirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.unconfirmed.icon,\r\n      statusText: STATUS.unconfirmed.text,\r\n    }));\r\n    const all = [...confirmed, ...excluded, ...unconfirmed];\r\n    all.sort((a, b) => a.evidenceName.localeCompare(b.evidenceName));\r\n\r\n    return all;\r\n  }, [state]);\r\n\r\n  return evidenceMap.map((e, key) => (\r\n    <span\r\n      className=\"Evidence-item\"\r\n      onClick={() => incrementStatus(e.evidenceName)}\r\n      key={key}\r\n    >\r\n      <span className=\"Evidence-status\">{e.statusIcon}</span>\r\n      <span className={`Evidence-name-${e.statusText}`}>{e.evidenceName}</span>\r\n    </span>\r\n  ));\r\n};\r\n","import React from 'react';\r\n\r\nexport const Reset = ({ evidence: { resetEvidence }, ghosts: { resetGhosts }}) => {\r\n  const handleClick = () => {\r\n    resetEvidence();\r\n    resetGhosts();\r\n  }\r\n  return (\r\n    <button onClick={handleClick}>Reset</button>\r\n  )\r\n}","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { GHOST_EVIDENCE_MAP, GHOST_NAME_MAP } from \"../constants\";\r\n\r\nconst SECONDARY_EVIDENCE = [\r\n  {\r\n    ghostName: GHOST_NAME_MAP.wraith,\r\n    icons: [\r\n      {\r\n        icon: \"do_not_step\",\r\n        classes: [\"green-neon\"],\r\n      },\r\n    ],\r\n    key: \"no_salt_footsteps\",\r\n    description: \"No glowing footsteps from walking in salt\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.phantom,\r\n    icons: [\r\n      {\r\n        icon: \"no_photography\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    key: \"disappears_on_camera\",\r\n    description: \"Disappears when photo is taken but manifestation continues\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.phantom,\r\n    icons: [\r\n      {\r\n        icon: \"highlight\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n    ],\r\n    key: \"slow_hunt_blink\",\r\n    description: \"Ghost blinks slowly while hunting\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.revenant,\r\n    key: \"hunt_speed_los\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    description: \"Twice as fast while hunting with line of sight\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.revenant,\r\n    key: \"hunt_speed_no_los\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"inverted\"],\r\n      },\r\n    ],\r\n    description: \"Twice as slow while hunting without line of sight\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.jinn,\r\n    icon: \"directions_run\",\r\n    key: \"fast_closing_speed_during_hunt_with_power\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"orange-warning\"],\r\n      },\r\n      {\r\n        icon: \"bolt\",\r\n        classes: [\"yellow-bright\"],\r\n      },\r\n    ],\r\n    description:\r\n      \"While hunting, moves fast while far away if breaker is on\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.jinn,\r\n    icon: \"directions_run\",\r\n    key: \"normal_hunt_speed_with_power_off\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"inverted\"],\r\n      },\r\n      {\r\n        icon: \"bolt\",\r\n        classes: [\"inverted\"],\r\n      },\r\n    ],\r\n    description:\r\n      \"While hunting, moves normal speed if breaker is off\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.banshee,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    key: \"hunts_above_sixty_five_percent\",\r\n    description:\r\n      \"Hunts can (rarely) start at one-hundred percent average sanity\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.demon,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"orange-warning\"],\r\n      },\r\n    ],\r\n    key: \"hunts_above_sixty_percent\",\r\n    description: \"Hunts can start at sixty-five percent average sanity\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.demon,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"green-good\"],\r\n      },\r\n    ],\r\n    key: \"no_sanity_loss_on_ouija_success\",\r\n    description: \"No sanity loss from successful Ouija board questions\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.mare,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n      {\r\n        icon: \"emoji_objects\",\r\n        classes: [\"md-inactive\"],\r\n      },\r\n    ],\r\n    key: \"hunts_up_to_sixty_percent_in_dark\",\r\n    description:\r\n      \"Hunts can start at sixty percent average sanity with lights off\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.mare,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n      {\r\n        icon: \"emoji_objects\",\r\n        classes: [\"yellow-bright\"],\r\n      },\r\n    ],\r\n    key: \"hunts_at_forty_percent_and_below_with_lights_on\",\r\n    description: \"Can only hunt at forty percent and below with lights on\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.poltergeist,\r\n    icons: [\r\n      {\r\n        icon: \"double_arrow\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n    ],\r\n    key: \"throws_multiple_objects_at_once\",\r\n    description: \"Can throw multiple items at the same time\",\r\n  },\r\n];\r\n\r\nconst data = SECONDARY_EVIDENCE.map((s) => ({\r\n  ...s,\r\n  evidence: GHOST_EVIDENCE_MAP[s.ghostName],\r\n}));\r\n\r\nconst Icon = ({ classes, icon }) => (\r\n  <span\r\n    className={classNames({\r\n      \"Secondary-evidence-icon\": true,\r\n      \"material-icons\": true,\r\n      \"md-18\": true,\r\n      ...classes.reduce(\r\n        (list, c) => ({\r\n          ...list,\r\n          [c]: true,\r\n        }),\r\n        {}\r\n      ),\r\n    })}\r\n  >\r\n    {icon}\r\n  </span>\r\n);\r\n\r\nexport const Secondary = ({\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence,\r\n  },\r\n  ghosts: { toggleGhost },\r\n}) => {\r\n  const [selectedGhost, setSelectedGhost] = React.useState();\r\n  \r\n  const handleClick = (ghost) => {\r\n    if (selectedGhost && ghost.ghostName === selectedGhost) {\r\n      setSelectedGhost(null);\r\n    } else {\r\n      setSelectedGhost(ghost.ghostName);\r\n    }\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  };\r\n\r\n  const highlighted = React.useCallback(\r\n    (ghostName) => validGhosts.includes(ghostName),\r\n    [validGhosts]\r\n  );\r\n\r\n  return (\r\n    <ul className=\"Secondary-evidence\">\r\n      {data.map(({ description, icons = [], key, ...ghost }) => {\r\n        return (\r\n          <li onClick={() => handleClick(ghost)} key={key}>\r\n            <React.Fragment>\r\n              <span className=\"Secondary-evidence-icons\">\r\n                {icons.map(({ icon, classes }) => (\r\n                  <Icon key={`${key}_${icon}`} classes={classes} icon={icon} />\r\n                ))}\r\n              </span>\r\n              <span\r\n                className={classNames({\r\n                  \"Secondary-evidence-description\": true,\r\n                  \"Secondary-evidence-description-highlighted\": highlighted(ghost.ghostName),\r\n                  \"Secondary-evidence-description-disabled\": !highlighted(ghost.ghostName),\r\n                  \"Secondary-evidence-description-selected\": selectedGhost === ghost.ghostName,\r\n                })}\r\n              >\r\n                <span>{description}</span>\r\n              </span>\r\n            </React.Fragment>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  add: {\r\n    confirmed: \"ADD_CONFIRMED_EVIDENCE\",\r\n    excluded: \"ADD_EXCLUDED_EVIDENCE\",\r\n    unconfirmed: \"ADD_UNCONFIRMED_EVIDENCE\",\r\n  },\r\n  reset: \"RESET_EVIDENCE\",\r\n  toggleGhostEvidence: \"TOGGLE_GHOST_EVIDENCE\",\r\n  validate: \"VALIDATE_ALL_EVIDENCE\",\r\n};\r\n\r\nconst addWithoutDuplicates = (existingArray, newItem) => [\r\n  ...new Set([...existingArray, newItem]),\r\n];\r\n\r\nexport const reducer = (state = INITIAL_STATE.evidence, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.add.confirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: addWithoutDuplicates(state.confirmed, payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.excluded: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: addWithoutDuplicates(state.excluded, payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.unconfirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: addWithoutDuplicates(state.unconfirmed, payload),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.evidence;\r\n    }\r\n    case actionTypes.toggleGhostEvidence: {\r\n      const confirmed = state.ghosts\r\n        .filter((ghost) => ghost.name === payload.ghostName)\r\n        .map((ghost) => ghost.evidence)\r\n        .flat();\r\n\r\n      if (\r\n        state.validGhosts.length === 1 &&\r\n        state.validGhosts.includes(payload.ghostName)\r\n      ) {\r\n        return {\r\n          ...state,\r\n          confirmed: [],\r\n          excluded: [],\r\n          unconfirmed: state.all,\r\n        };\r\n      }\r\n\r\n      const excluded = state.all.filter((e) => !confirmed.includes(e));\r\n\r\n      return {\r\n        ...state,\r\n        confirmed,\r\n        excluded,\r\n        unconfirmed: [],\r\n      };\r\n    }\r\n    case actionTypes.validate: {\r\n      const validEvidence = [\r\n        ...new Set(\r\n          state.ghosts\r\n            .filter(\r\n              (ghost) =>\r\n                state.confirmed.every((e) => ghost.evidence.includes(e)) &&\r\n                state.excluded.every((e) => !ghost.evidence.includes(e))\r\n            )\r\n            .map((ghost) => ghost.evidence)\r\n            .flat()\r\n        ),\r\n      ];\r\n\r\n      if (validEvidence.length === 0) {\r\n        return {\r\n          ...state,\r\n          validGhosts: [],\r\n        };\r\n      }\r\n\r\n      const validGhosts = [\r\n        state.ghosts\r\n          .filter((ghost) =>\r\n            state.confirmed.every((e) => ghost.evidence.includes(e))\r\n          )\r\n          .map((ghost) => ghost.name),\r\n      ].flat();\r\n\r\n      const payloadExcluded = (e) =>\r\n        e === payload && state.excluded.includes(payload);\r\n\r\n      const excluded = state.all.filter(\r\n        (e) =>\r\n          payloadExcluded(e) ||\r\n          !validEvidence.includes(e) ||\r\n          state.excluded.includes(e)\r\n      );\r\n\r\n      const unconfirmed = state.all.filter(\r\n        (e) =>\r\n          e.name !== payload &&\r\n          !state.confirmed.includes(e) &&\r\n          !excluded.includes(e)\r\n      );\r\n      const confirmed = state.all.filter(\r\n        (e) => !unconfirmed.includes(e) && !excluded.includes(e)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        excluded,\r\n        unconfirmed,\r\n        confirmed,\r\n        validGhosts,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useEvidence = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.evidence);\r\n\r\n  const incrementStatus = (payload) => {\r\n    if (state.confirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.excluded });\r\n    }\r\n\r\n    if (state.excluded.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.unconfirmed });\r\n    }\r\n\r\n    if (state.unconfirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.confirmed });\r\n    }\r\n\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const toggleGhostEvidence = (payload) => {\r\n    dispatch({ payload, type: actionTypes.toggleGhostEvidence });\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const resetEvidence = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    incrementStatus,\r\n    resetEvidence,\r\n    state,\r\n    toggleGhostEvidence,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport pkgJson from \"../package.json\";\r\nimport { Ghosts } from \"./components/Ghosts\";\r\nimport { Evidence } from \"./components/Evidence\";\r\nimport { Reset } from \"./components/Reset\";\r\nimport { Secondary } from \"./components/Secondary\";\r\nimport { useGhosts } from \"./reducers/useGhosts\";\r\nimport { useEvidence } from \"./reducers/useEvidence\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const evidence = useEvidence();\r\n  const ghosts = useGhosts();\r\n  const backgroundClass = React.useMemo(() => {\r\n    let opacities = [];\r\n    for (let i = 0; i <= 100; i += 9) {\r\n      opacities = [...opacities, i];\r\n    }\r\n    opacities.reverse();\r\n    const ghostCount = evidence.state.validGhosts.length - 1;\r\n    const index = ghostCount >= 0 && ghostCount < 12 ? ghostCount : 11;\r\n\r\n    return `opacity-${opacities[index]}`;\r\n  }, [evidence.state.validGhosts]);\r\n  return (\r\n    evidence &&\r\n    ghosts && (\r\n      <React.Fragment>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">Phasmophobia Evidence Matrix</header>\r\n          <section data-testid=\"test-evidence\" className=\"App-section-evidence\">\r\n            <Evidence evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section data-testid=\"test-ghosts\" className=\"App-section-ghosts\">\r\n            <Ghosts evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section className=\"App-section-secondary-evidence\">\r\n            <Secondary evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section className=\"App-section-controls\">\r\n            <Reset ghosts={ghosts} evidence={evidence} />\r\n          </section>\r\n          <section className=\"App-section-version\">\r\n            beta version {pkgJson.version}\r\n          </section>\r\n        </div>\r\n        <div\r\n          className={classNames({\r\n            \"App-background\": true,\r\n            [backgroundClass]: backgroundClass,\r\n          })}\r\n        ></div>\r\n      </React.Fragment>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}