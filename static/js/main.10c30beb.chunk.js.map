{"version":3,"sources":["constants.js","reducers/constants.js","reducers/useGhosts.js","components/Ghosts.js","components/Evidence.js","components/Reset.js","components/Secondary.js","reducers/useEvidence.js","App.js","reportWebVitals.js","index.js"],"names":["STATUS","unconfirmed","icon","text","confirmed","excluded","EVIDENCE_MAP","emf","fingerprints","freezing","orbs","writing","box","EVIDENCE_NAMES","Object","values","GHOSTS","entries","map","key","name","statusIcon","statusText","evidence","valid","GHOST_NAMES","g","GHOST_NAME_MAP","reduce","ghosts","ghost","INITIAL_STATE","all","status","validGhosts","invalid","actionTypes","reducer","state","type","payload","filter","includes","length","Ghosts","dispatch","filterGhosts","toggleGhost","toggleGhostEvidence","ghostMap","React","useMemo","ghostName","sort","a","b","localeCompare","useEffect","onClick","handleClick","className","Evidence","incrementStatus","evidenceName","e","Reset","resetEvidence","resetGhosts","Secondary","wraith","phantom","revenant","banshee","addWithoutDuplicates","existingArray","newItem","Set","flat","alreadySet","every","validEvidence","payloadExcluded","App","useReducer","useEvidence","isValid","useGhosts","data-testid","pkgJson","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c30beb.chunk.js","sourcesContent":["export const STATUS = {\r\n  unconfirmed: {\r\n    icon: \"⚪\",\r\n    text: \"unconfirmed\",\r\n  },\r\n  confirmed: {\r\n    icon: \"✔️\",\r\n    text: \"confirmed\",\r\n  },\r\n  excluded: {\r\n    icon: \"❌\",\r\n    text: \"excluded\",\r\n  },\r\n};\r\n\r\nexport const EVIDENCE_MAP = {\r\n  emf: \"EMF Level 5\",\r\n  fingerprints: \"Fingerprints\",\r\n  freezing: \"Freezing\",\r\n  orbs: \"Ghost Orbs\",\r\n  writing: \"Ghost Writing\",\r\n  box: \"Spirit Box\",\r\n};\r\n\r\nexport const EVIDENCE_NAMES = Object.values(EVIDENCE_MAP);\r\n\r\nexport const EVIDENCE = Object.entries(EVIDENCE_MAP).map(([key, name]) => ({\r\n  key,\r\n  name,\r\n  statusIcon: STATUS.unconfirmed.icon,\r\n  statusText: STATUS.unconfirmed.text,\r\n}));\r\n\r\nexport const GHOSTS = [\r\n  {\r\n    name: \"banshee\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.freezing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"demon\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"jinn\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"mare\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"oni\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"phantom\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"poltergeist\",\r\n    evidence: [EVIDENCE_MAP.orbs, EVIDENCE_MAP.fingerprints, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"revenant\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"shade\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"spirit\",\r\n    evidence: [\r\n      EVIDENCE_MAP.box,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"wraith\",\r\n    evidence: [\r\n      EVIDENCE_MAP.freezing,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.box,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"yurei\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n];\r\n\r\nexport const GHOST_NAMES = GHOSTS.map((g) => g.name);\r\n\r\nexport const GHOST_NAME_MAP = GHOST_NAMES.reduce(\r\n  (ghosts, ghost) => ({\r\n    ...ghosts,\r\n    [ghost]: ghost,\r\n  }),\r\n  {}\r\n);\r\n","import {\r\n  EVIDENCE_NAMES,\r\n  GHOSTS,\r\n  GHOST_NAMES,\r\n  STATUS,\r\n} from \"../constants\";\r\n\r\nexport const INITIAL_STATE = {\r\n  evidence: {\r\n    all: EVIDENCE_NAMES,\r\n    confirmed: [],\r\n    excluded: [],\r\n    unconfirmed: EVIDENCE_NAMES,\r\n    status: STATUS,\r\n    ghosts: GHOSTS,\r\n    validGhosts: GHOST_NAMES,\r\n  },\r\n  ghosts: {\r\n    all: GHOST_NAMES,\r\n    valid: GHOST_NAMES,\r\n    invalid: [],\r\n    evidence: GHOSTS,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  filter: \"FILTER_GHOSTS_BY_EVIDENCE\",\r\n  reset: \"RESET_GHOSTS\",\r\n  toggle: \"TOGGLE_GHOST_STATUS\",\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE.ghosts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.filter: {\r\n      const valid = state.all.filter((ghost) => payload.includes(ghost));\r\n      return {\r\n        ...state,\r\n        valid,\r\n        invalid: state.all.filter((ghost) => !valid.includes(ghost)),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.ghosts;\r\n    }\r\n    case actionTypes.toggle: {\r\n      if (state.invalid.includes(payload)) {\r\n        return {\r\n          ...state,\r\n          valid: [payload],\r\n          invalid: state.all.filter((g) => g !== payload),\r\n        };\r\n      }\r\n      if (state.valid.length === 1) {\r\n        return {\r\n          ...state,\r\n          valid: state.all,\r\n          invalid: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        valid: [payload],\r\n        invalid: state.all.filter((g) => g !== payload),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useGhosts = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.ghosts);\r\n\r\n  const isValid = (payload) => state.valid.includes(payload);\r\n\r\n  const toggleGhost = (payload) =>\r\n    dispatch({ payload, type: actionTypes.toggle });\r\n\r\n  const filterGhosts = (payload) =>\r\n    dispatch({ payload, type: actionTypes.filter });\r\n\r\n  const resetGhosts = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    dispatch,\r\n    filterGhosts,\r\n    isValid,\r\n    resetGhosts,\r\n    state,\r\n    toggleGhost,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { actionTypes } from '../reducers/useGhosts';\r\n\r\nexport const Ghosts = ({\r\n  ghosts: { dispatch, filterGhosts, state, toggleGhost },\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence\r\n  },\r\n}) => {\r\n  const ghostMap = React.useMemo(() => {\r\n    const valid = state.valid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"valid\",\r\n    }));\r\n    const invalid = state.invalid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"invalid\",\r\n    }));\r\n    const all = [...valid, ...invalid].sort((a, b) =>\r\n      a.ghostName.localeCompare(b.ghostName)\r\n    );\r\n    return all;\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n      dispatch({payload: validGhosts, type: actionTypes.filter });\r\n  }, [dispatch, validGhosts]);\r\n\r\n  const handleClick = (ghost) => {\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  }\r\n\r\n  return ghostMap\r\n    ? ghostMap.map((ghost) => (\r\n        <span\r\n          key={ghost.ghostName}\r\n          onClick={() => handleClick(ghost)}\r\n          className={`Tag-ghost-${ghost.status}`}\r\n        >\r\n          {ghost.ghostName}\r\n        </span>\r\n      ))\r\n    : null;\r\n};\r\n","import React from \"react\";\r\nimport { STATUS } from \"../constants\";\r\n\r\nexport const Evidence = ({evidence: { state, incrementStatus }}) => {\r\n  const evidenceMap = React.useMemo(() => {\r\n    const confirmed = state.confirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.confirmed.icon,\r\n      statusText: STATUS.confirmed.text,\r\n    }));\r\n    const excluded = state.excluded.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.excluded.icon,\r\n      statusText: STATUS.excluded.text,\r\n    }));\r\n    const unconfirmed = state.unconfirmed.map((evidenceName) => ({\r\n      evidenceName,\r\n      statusIcon: STATUS.unconfirmed.icon,\r\n      statusText: STATUS.unconfirmed.text,\r\n    }));\r\n    const all = [...confirmed, ...excluded, ...unconfirmed];\r\n    all.sort((a, b) => a.evidenceName.localeCompare(b.evidenceName));\r\n\r\n    return all;\r\n  }, [state]);\r\n\r\n  return evidenceMap.map((e, key) => (\r\n    <span\r\n      className=\"Evidence-item\"\r\n      onClick={() => incrementStatus(e.evidenceName)}\r\n      key={key}\r\n    >\r\n      <span className=\"Evidence-status\">{e.statusIcon}</span>\r\n      <span className={`Evidence-name-${e.statusText}`}>{e.evidenceName}</span>\r\n    </span>\r\n  ));\r\n};\r\n","import React from 'react';\r\n\r\nexport const Reset = ({ evidence: { resetEvidence }, ghosts: { resetGhosts }}) => {\r\n  const handleClick = () => {\r\n    resetEvidence();\r\n    resetGhosts();\r\n  }\r\n  return (\r\n    <button onClick={handleClick}>Reset</button>\r\n  )\r\n}","import React from \"react\";\r\nimport { GHOST_NAME_MAP } from '../constants';\r\n\r\nconst SECONDARY_EVIDENCE = [\r\n    {\r\n      ghost: GHOST_NAME_MAP.wraith,\r\n      name: \"no_salt_footsteps\",\r\n      description: \"No footsteps in salt\",\r\n    },\r\n    {\r\n      ghost: GHOST_NAME_MAP.phantom,\r\n      name: \"disappears_on_camera\",\r\n      description: \"Disappears when its photo is taken\",\r\n    },\r\n    {\r\n      ghost: GHOST_NAME_MAP.phantom,\r\n      name: \"slow_hunt_blink\",\r\n      description: \"Blinks slowly while hunting\",\r\n    },\r\n    {\r\n      ghost: GHOST_NAME_MAP.revenant,\r\n      name: \"hunt_speed_los\",\r\n      description: \"Twice as fast while hunting with line of sight\",\r\n    },\r\n    {\r\n      ghost: GHOST_NAME_MAP.revenant,\r\n      name: \"hunt_speed_no_los\",\r\n      description: \"Twice as slow while hunting without line of sight\",\r\n    },\r\n    {\r\n      ghost: GHOST_NAME_MAP.banshee,\r\n      name: \"hunts_above_sixty_five_percent\",\r\n      description: \"Starts hunt above sixty-five percent\"\r\n    }\r\n  ];\r\n\r\nexport const Secondary = () => {\r\n  return null;\r\n  // return (\r\n  //   SECONDARY_EVIDENCE.map((s) => {\r\n  //     return (\r\n  //       <div key={s.name}>{s.ghost} | {s.description}</div>\r\n  //     )\r\n  //   })\r\n  // );\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  add: {\r\n    confirmed: \"ADD_CONFIRMED_EVIDENCE\",\r\n    excluded: \"ADD_EXCLUDED_EVIDENCE\",\r\n    unconfirmed: \"ADD_UNCONFIRMED_EVIDENCE\",\r\n  },\r\n  reset: \"RESET_EVIDENCE\",\r\n  toggleGhostEvidence: \"TOGGLE_GHOST_EVIDENCE\",\r\n  validate: \"VALIDATE_ALL_EVIDENCE\",\r\n};\r\n\r\nconst addWithoutDuplicates = (existingArray, newItem) => [\r\n  ...new Set([...existingArray, newItem]),\r\n];\r\n\r\nexport const reducer = (state = INITIAL_STATE.evidence, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.add.confirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: addWithoutDuplicates(state.confirmed, payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.excluded: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: addWithoutDuplicates(state.excluded, payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.unconfirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: addWithoutDuplicates(state.unconfirmed, payload),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.evidence;\r\n    }\r\n    case actionTypes.toggleGhostEvidence: {\r\n      const confirmed = state.ghosts\r\n        .filter((ghost) => ghost.name === payload.ghostName)\r\n        .map((ghost) => ghost.evidence)\r\n        .flat();\r\n\r\n      const alreadySet = confirmed.every((e) => state.confirmed.includes(e));\r\n\r\n      if (alreadySet) {\r\n        return {\r\n          ...state,\r\n          confirmed: [],\r\n          excluded: [],\r\n          unconfirmed: state.all,\r\n        };\r\n      }\r\n\r\n      const excluded = state.all.filter((e) => !confirmed.includes(e));\r\n\r\n      return {\r\n        ...state,\r\n        confirmed,\r\n        excluded,\r\n        unconfirmed: [],\r\n      };\r\n    }\r\n    case actionTypes.validate: {\r\n      const validEvidence = [\r\n        ...new Set(\r\n          state.ghosts\r\n            .filter((ghost) =>\r\n              state.confirmed.every((e) => ghost.evidence.includes(e)) &&\r\n              state.excluded.every((e) => !ghost.evidence.includes(e))\r\n            )\r\n            .map((ghost) => ghost.evidence)\r\n            .flat()\r\n        ),\r\n      ];\r\n\r\n      if (validEvidence.length === 0) {\r\n        return {\r\n          ...state,\r\n          validGhosts: [],\r\n        }\r\n      }\r\n\r\n      const validGhosts = [\r\n        state.ghosts\r\n          .filter((ghost) =>\r\n            state.confirmed.every((e) => ghost.evidence.includes(e))\r\n          )\r\n          .map((ghost) => ghost.name),\r\n      ].flat();\r\n\r\n      const payloadExcluded = (e) =>\r\n        e === payload && state.excluded.includes(payload);\r\n\r\n      const excluded = state.all.filter(\r\n        (e) => payloadExcluded(e) || !validEvidence.includes(e) || state.excluded.includes(e)\r\n      );\r\n\r\n      const unconfirmed = state.all.filter(\r\n        (e) =>\r\n          e.name !== payload &&\r\n          !state.confirmed.includes(e) &&\r\n          !excluded.includes(e)\r\n      );\r\n      const confirmed = state.all.filter(\r\n        (e) => !unconfirmed.includes(e) && !excluded.includes(e)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        excluded,\r\n        unconfirmed,\r\n        confirmed,\r\n        validGhosts,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useEvidence = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.evidence);\r\n\r\n  const incrementStatus = (payload) => {\r\n    if (state.confirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.excluded });\r\n    }\r\n\r\n    if (state.excluded.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.unconfirmed });\r\n    }\r\n\r\n    if (state.unconfirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.confirmed });\r\n    }\r\n\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const toggleGhostEvidence = (payload) => {\r\n    dispatch({ payload, type: actionTypes.toggleGhostEvidence });\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const resetEvidence = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    incrementStatus,\r\n    resetEvidence,\r\n    state,\r\n    toggleGhostEvidence,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport pkgJson from '../package.json';\r\nimport { Ghosts } from \"./components/Ghosts\";\r\nimport { Evidence } from \"./components/Evidence\";\r\nimport { Reset } from './components/Reset';\r\nimport { Secondary } from './components/Secondary';\r\nimport { useGhosts } from \"./reducers/useGhosts\";\r\nimport { useEvidence } from \"./reducers/useEvidence\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const evidence = useEvidence();\r\n  const ghosts = useGhosts();\r\n  return (\r\n    evidence &&\r\n    ghosts && (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">Phasmophobia Evidence Matrix</header>\r\n        <section data-testid=\"test-evidence\" className=\"App-section-evidence\">\r\n          <Evidence\r\n            evidence={evidence}\r\n            ghosts={ghosts}\r\n          />\r\n        </section>\r\n        <section data-testid=\"test-ghosts\" className=\"App-section-ghosts\">\r\n          <Ghosts evidence={evidence} ghosts={ghosts} />\r\n        </section>\r\n        <section className=\"App-section-secondary-evidence\">\r\n          <Secondary />\r\n        </section>\r\n        <section className=\"App-section-controls\">\r\n          <Reset ghosts={ghosts} evidence={evidence} />\r\n        </section>\r\n        <section className=\"App-section-version\">\r\n          beta version {pkgJson.version}\r\n        </section>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}