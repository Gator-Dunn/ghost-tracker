{"version":3,"sources":["constants.js","reducers/constants.js","reducers/useGhosts.js","components/Ghosts.js","components/Icon.js","components/Evidence.js","components/Reset.js","components/Secondary.js","reducers/useEvidence.js","App.js","reportWebVitals.js","index.js"],"names":["STATUS","unconfirmed","class","icon","text","confirmed","excluded","EVIDENCE_MAP","emf","fingerprints","freezing","orbs","writing","box","EVIDENCE_NAMES","Object","values","GHOSTS","entries","map","key","name","statusIcon","statusText","evidence","valid","GHOST_EVIDENCE_MAP","reduce","ghost","GHOST_NAMES","g","GHOST_NAME_MAP","ghosts","SECONDARY_EVIDENCE","ghostName","wraith","icons","classes","description","phantom","revenant","jinn","banshee","demon","mare","poltergeist","s","INITIAL_STATE","all","status","validGhosts","invalid","actionTypes","reducer","state","type","payload","filter","includes","length","Ghosts","dispatch","toggleGhost","toggleGhostEvidence","ghostMap","React","useMemo","sort","a","b","localeCompare","useEffect","onClick","handleClick","className","validSizes","Icon","size","sizeStyle","classesMap","list","c","classNames","Evidence","incrementStatus","evidenceName","e","Reset","resetEvidence","resetGhosts","Secondary","useState","selectedGhost","setSelectedGhost","highlighted","useCallback","Fragment","addWithoutDuplicates","existingArray","newItem","Set","flat","validEvidence","every","payloadExcluded","App","useReducer","useEvidence","filterGhosts","getGhost","isValid","useGhosts","backgroundClass","opacities","i","reverse","ghostCount","data-testid","pkgJson","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.634ea948.chunk.js","sourcesContent":["export const STATUS = {\r\n  unconfirmed: {\r\n    class: \"grey-disabled\",\r\n    icon: \"radio_button_unchecked\",\r\n    text: \"unconfirmed\",\r\n  },\r\n  confirmed: {\r\n    class: \"green-good\",\r\n    icon: \"radio_button_checked\",\r\n    text: \"confirmed\",\r\n  },\r\n  excluded: {\r\n    class: \"red-stop\",\r\n    icon: \"not_interested\",\r\n    text: \"excluded\",\r\n  },\r\n}\r\n\r\nexport const EVIDENCE_MAP = {\r\n  emf: \"EMF Level 5\",\r\n  fingerprints: \"Fingerprints\",\r\n  freezing: \"Freezing\",\r\n  orbs: \"Ghost Orbs\",\r\n  writing: \"Ghost Writing\",\r\n  box: \"Spirit Box\",\r\n};\r\n\r\nexport const EVIDENCE_NAMES = Object.values(EVIDENCE_MAP);\r\n\r\nexport const EVIDENCE = Object.entries(EVIDENCE_MAP).map(([key, name]) => ({\r\n  key,\r\n  name,\r\n  statusIcon: STATUS.unconfirmed.icon,\r\n  statusText: STATUS.unconfirmed.text,\r\n}));\r\n\r\nexport const GHOSTS = [\r\n  {\r\n    name: \"banshee\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.freezing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"demon\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"jinn\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"mare\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"oni\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.box, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"phantom\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"poltergeist\",\r\n    evidence: [EVIDENCE_MAP.orbs, EVIDENCE_MAP.fingerprints, EVIDENCE_MAP.box],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"revenant\",\r\n    evidence: [\r\n      EVIDENCE_MAP.emf,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"shade\",\r\n    evidence: [EVIDENCE_MAP.emf, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"spirit\",\r\n    evidence: [\r\n      EVIDENCE_MAP.box,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.writing,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"wraith\",\r\n    evidence: [\r\n      EVIDENCE_MAP.freezing,\r\n      EVIDENCE_MAP.fingerprints,\r\n      EVIDENCE_MAP.box,\r\n    ],\r\n    valid: true,\r\n  },\r\n  {\r\n    name: \"yurei\",\r\n    evidence: [EVIDENCE_MAP.freezing, EVIDENCE_MAP.orbs, EVIDENCE_MAP.writing],\r\n    valid: true,\r\n  },\r\n];\r\n\r\nexport const GHOST_EVIDENCE_MAP = GHOSTS.reduce(\r\n  (map, ghost) => ({\r\n    ...map,\r\n    [ghost.name]: ghost.evidence,\r\n  }),\r\n  {}\r\n);\r\n\r\nexport const GHOST_NAMES = GHOSTS.map((g) => g.name);\r\n\r\nexport const GHOST_NAME_MAP = GHOST_NAMES.reduce(\r\n  (ghosts, ghost) => ({\r\n    ...ghosts,\r\n    [ghost]: ghost,\r\n  }),\r\n  {}\r\n);\r\n\r\nexport const SECONDARY_EVIDENCE = [\r\n  {\r\n    ghostName: GHOST_NAME_MAP.wraith,\r\n    icons: [\r\n      {\r\n        icon: \"do_not_step\",\r\n        classes: [\"green-neon\"],\r\n      },\r\n    ],\r\n    key: \"no_salt_footsteps\",\r\n    description: \"No glowing footsteps from walking in salt\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.phantom,\r\n    icons: [\r\n      {\r\n        icon: \"no_photography\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    key: \"disappears_on_camera\",\r\n    description: \"Disappears when photo is taken but manifestation continues\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.phantom,\r\n    icons: [\r\n      {\r\n        icon: \"highlight\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n    ],\r\n    key: \"slow_hunt_blink\",\r\n    description: \"Ghost blinks slowly while hunting\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.revenant,\r\n    key: \"hunt_speed_los\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    description: \"Twice as fast while hunting with line of sight\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.revenant,\r\n    key: \"hunt_speed_no_los\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"inverted\"],\r\n      },\r\n    ],\r\n    description: \"Twice as slow while hunting without line of sight\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.jinn,\r\n    icon: \"directions_run\",\r\n    key: \"fast_closing_speed_during_hunt_with_power\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"orange-warning\"],\r\n      },\r\n      {\r\n        icon: \"bolt\",\r\n        classes: [\"yellow-bright\"],\r\n      },\r\n    ],\r\n    description:\r\n      \"While hunting, moves fast while far away if breaker is on\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.jinn,\r\n    icon: \"directions_run\",\r\n    key: \"normal_hunt_speed_with_power_off\",\r\n    icons: [\r\n      {\r\n        icon: \"directions_run\",\r\n        classes: [\"inverted\"],\r\n      },\r\n      {\r\n        icon: \"bolt\",\r\n        classes: [\"inverted\"],\r\n      },\r\n    ],\r\n    description:\r\n      \"While hunting, moves normal speed if breaker is off\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.banshee,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"red-stop\"],\r\n      },\r\n    ],\r\n    key: \"hunts_above_sixty_five_percent\",\r\n    description:\r\n      \"Hunts can (rarely) start at one-hundred percent average sanity\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.demon,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"orange-warning\"],\r\n      },\r\n    ],\r\n    key: \"hunts_above_sixty_percent\",\r\n    description: \"Hunts can start at sixty-five percent average sanity\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.demon,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"green-good\"],\r\n      },\r\n    ],\r\n    key: \"no_sanity_loss_on_ouija_success\",\r\n    description: \"No sanity loss from successful Ouija board questions\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.mare,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n      {\r\n        icon: \"emoji_objects\",\r\n        classes: [\"md-inactive\"],\r\n      },\r\n    ],\r\n    key: \"hunts_up_to_sixty_percent_in_dark\",\r\n    description:\r\n      \"Hunts can start at sixty percent average sanity with lights off\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.mare,\r\n    icons: [\r\n      {\r\n        icon: \"psychology\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n      {\r\n        icon: \"emoji_objects\",\r\n        classes: [\"yellow-bright\"],\r\n      },\r\n    ],\r\n    key: \"hunts_at_forty_percent_and_below_with_lights_on\",\r\n    description: \"Can only hunt at forty percent and below with lights on\",\r\n  },\r\n  {\r\n    ghostName: GHOST_NAME_MAP.poltergeist,\r\n    icons: [\r\n      {\r\n        icon: \"double_arrow\",\r\n        classes: [\"yellow-caution\"],\r\n      },\r\n    ],\r\n    key: \"throws_multiple_objects_at_once\",\r\n    description: \"Can throw multiple items at the same time\",\r\n  },\r\n].map((s) => ({\r\n  ...s,\r\n  icons: [\r\n    ...s.icons,\r\n    \"Secondary-evidence-icon\",\r\n  ],\r\n  evidence: GHOST_EVIDENCE_MAP[s.ghostName],\r\n}));\r\n","import {\r\n  EVIDENCE_NAMES,\r\n  GHOSTS,\r\n  GHOST_NAMES,\r\n  STATUS,\r\n} from \"../constants\";\r\n\r\nexport const INITIAL_STATE = {\r\n  evidence: {\r\n    all: EVIDENCE_NAMES,\r\n    confirmed: [],\r\n    excluded: [],\r\n    unconfirmed: EVIDENCE_NAMES,\r\n    status: STATUS,\r\n    ghosts: GHOSTS,\r\n    validGhosts: GHOST_NAMES,\r\n  },\r\n  ghosts: {\r\n    all: GHOST_NAMES,\r\n    valid: GHOST_NAMES,\r\n    invalid: [],\r\n    evidence: GHOSTS,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  filter: \"FILTER_GHOSTS_BY_EVIDENCE\",\r\n  reset: \"RESET_GHOSTS\",\r\n  toggle: \"TOGGLE_GHOST_STATUS\",\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE.ghosts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.filter: {\r\n      const valid = state.all.filter((ghost) => payload.includes(ghost));\r\n      return {\r\n        ...state,\r\n        valid,\r\n        invalid: state.all.filter((ghost) => !valid.includes(ghost)),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.ghosts;\r\n    }\r\n    case actionTypes.toggle: {\r\n      if (state.invalid.includes(payload)) {\r\n        return {\r\n          ...state,\r\n          valid: [payload],\r\n          invalid: state.all.filter((g) => g !== payload),\r\n        };\r\n      }\r\n      if (state.valid.length === 1) {\r\n        return {\r\n          ...state,\r\n          valid: state.all,\r\n          invalid: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        valid: [payload],\r\n        invalid: state.all.filter((g) => g !== payload),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useGhosts = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.ghosts);\r\n\r\n  const isValid = (payload) => state.valid.includes(payload);\r\n\r\n  const toggleGhost = (payload) =>\r\n    dispatch({ payload, type: actionTypes.toggle });\r\n\r\n  const filterGhosts = (payload) =>\r\n    dispatch({ payload, type: actionTypes.filter });\r\n\r\n  const resetGhosts = () => dispatch({ type: actionTypes.reset });\r\n\r\n  const getGhost = (payload) =>\r\n    state.all.filter((ghost) => ghost.name === payload);\r\n\r\n  return {\r\n    dispatch,\r\n    filterGhosts,\r\n    getGhost,\r\n    isValid,\r\n    resetGhosts,\r\n    state,\r\n    toggleGhost,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { actionTypes } from '../reducers/useGhosts';\r\n\r\nexport const Ghosts = ({\r\n  ghosts: { dispatch, state, toggleGhost },\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence\r\n  },\r\n}) => {\r\n  const ghostMap = React.useMemo(() => {\r\n    const valid = state.valid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"valid\",\r\n    }));\r\n    const invalid = state.invalid.map((ghostName) => ({\r\n      ghostName,\r\n      status: \"invalid\",\r\n    }));\r\n    const all = [...valid, ...invalid].sort((a, b) =>\r\n      a.ghostName.localeCompare(b.ghostName)\r\n    );\r\n    return all;\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n      dispatch({payload: validGhosts, type: actionTypes.filter });\r\n  }, [dispatch, validGhosts]);\r\n\r\n  const handleClick = (ghost) => {\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  }\r\n\r\n  return ghostMap\r\n    ? ghostMap.map((ghost) => (\r\n        <span\r\n          key={ghost.ghostName}\r\n          onClick={() => handleClick(ghost)}\r\n          className={`Tag-ghost-${ghost.status}`}\r\n        >\r\n          {ghost.ghostName}\r\n        </span>\r\n      ))\r\n    : null;\r\n};\r\n","import classNames from \"classnames\";\r\nconst validSizes = [\"small\", \"medium\", \"large\", \"extra-large\"];\r\n\r\nexport const Icon = ({ classes = [], icon, size = \"medium\" }) => {\r\n  const sizeStyle = validSizes.includes(size) ? size : \"medium\";\r\n  const classesMap = classes.reduce(\r\n    (list, c) => ({\r\n      ...list,\r\n      [c]: true,\r\n    }),\r\n    {}\r\n  );\r\n\r\n  return (\r\n  <span\r\n    className={classNames({\r\n      \"material-icons\": true,\r\n      [sizeStyle]: true,\r\n      ...classesMap,\r\n    })}\r\n  >\r\n    {icon}\r\n  </span>\r\n);\r\n  }","import React from \"react\";\r\nimport { Icon } from \"./Icon\";\r\nimport { STATUS } from \"../constants\";\r\n\r\nexport const Evidence = ({ evidence: { state, incrementStatus } }) => {\r\n  const evidenceMap = React.useMemo(() => {\r\n    const confirmed = state.confirmed.map((evidenceName) => ({\r\n      class: STATUS.confirmed.class,\r\n      evidenceName,\r\n      statusIcon: STATUS.confirmed.icon,\r\n      statusText: STATUS.confirmed.text,\r\n    }));\r\n    const excluded = state.excluded.map((evidenceName) => ({\r\n      class: STATUS.excluded.class,\r\n      evidenceName,\r\n      statusIcon: STATUS.excluded.icon,\r\n      statusText: STATUS.excluded.text,\r\n    }));\r\n    const unconfirmed = state.unconfirmed.map((evidenceName) => ({\r\n      class: STATUS.unconfirmed.class,\r\n      evidenceName,\r\n      statusIcon: STATUS.unconfirmed.icon,\r\n      statusText: STATUS.unconfirmed.text,\r\n    }));\r\n    const all = [...confirmed, ...excluded, ...unconfirmed];\r\n    all.sort((a, b) => a.evidenceName.localeCompare(b.evidenceName));\r\n\r\n    return all;\r\n  }, [state]);\r\n\r\n  return evidenceMap.map((e, key) => (\r\n    <span\r\n      className=\"Evidence-item\"\r\n      onClick={() => incrementStatus(e.evidenceName)}\r\n      key={key}\r\n    >\r\n      <span className=\"Evidence-status\">\r\n        <Icon classes={[e.class]} icon={e.statusIcon} size=\"small\" />\r\n      </span>\r\n      <span className={`Evidence-name-${e.statusText}`}>{e.evidenceName}</span>\r\n    </span>\r\n  ));\r\n};\r\n","import React from 'react';\r\n\r\nexport const Reset = ({ evidence: { resetEvidence }, ghosts: { resetGhosts }}) => {\r\n  const handleClick = () => {\r\n    resetEvidence();\r\n    resetGhosts();\r\n  }\r\n  return (\r\n    <button onClick={handleClick}>Reset</button>\r\n  )\r\n}","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { SECONDARY_EVIDENCE } from \"../constants\";\r\nimport { Icon } from \"./Icon\";\r\n\r\nexport const Secondary = ({\r\n  evidence: {\r\n    state: { validGhosts },\r\n    toggleGhostEvidence,\r\n  },\r\n  ghosts: { toggleGhost },\r\n}) => {\r\n  const [selectedGhost, setSelectedGhost] = React.useState();\r\n\r\n  const handleClick = (ghost) => {\r\n    if (selectedGhost && ghost.ghostName === selectedGhost) {\r\n      setSelectedGhost(null);\r\n    } else {\r\n      setSelectedGhost(ghost.ghostName);\r\n    }\r\n    toggleGhost(ghost.ghostName);\r\n    toggleGhostEvidence(ghost);\r\n  };\r\n\r\n  const highlighted = React.useCallback(\r\n    (ghostName) => validGhosts.includes(ghostName),\r\n    [validGhosts]\r\n  );\r\n\r\n  return (\r\n    <ul className=\"Secondary-evidence\">\r\n      {SECONDARY_EVIDENCE.map(({ description, icons = [], key, ...ghost }) => {\r\n        return (\r\n          <li onClick={() => handleClick(ghost)} key={key}>\r\n            <React.Fragment>\r\n              <span className=\"Secondary-evidence-icons\">\r\n                {icons.map(({ icon, classes }) => (\r\n                  <Icon key={`${key}_${icon}`} classes={classes} icon={icon} />\r\n                ))}\r\n              </span>\r\n              <span\r\n                className={classNames({\r\n                  \"Secondary-evidence-description\": true,\r\n                  \"Secondary-evidence-description-highlighted\": highlighted(\r\n                    ghost.ghostName\r\n                  ),\r\n                  \"Secondary-evidence-description-disabled\": !highlighted(\r\n                    ghost.ghostName\r\n                  ),\r\n                  \"Secondary-evidence-description-selected\":\r\n                    selectedGhost === ghost.ghostName,\r\n                })}\r\n              >\r\n                <span>{description}</span>\r\n              </span>\r\n            </React.Fragment>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { INITIAL_STATE } from \"./constants\";\r\n\r\nexport const actionTypes = {\r\n  add: {\r\n    confirmed: \"ADD_CONFIRMED_EVIDENCE\",\r\n    excluded: \"ADD_EXCLUDED_EVIDENCE\",\r\n    unconfirmed: \"ADD_UNCONFIRMED_EVIDENCE\",\r\n  },\r\n  reset: \"RESET_EVIDENCE\",\r\n  toggleGhostEvidence: \"TOGGLE_GHOST_EVIDENCE\",\r\n  validate: \"VALIDATE_ALL_EVIDENCE\",\r\n};\r\n\r\nconst addWithoutDuplicates = (existingArray, newItem) => [\r\n  ...new Set([...existingArray, newItem]),\r\n];\r\n\r\nexport const reducer = (state = INITIAL_STATE.evidence, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.add.confirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: addWithoutDuplicates(state.confirmed, payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.excluded: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: addWithoutDuplicates(state.excluded, payload),\r\n        unconfirmed: state.unconfirmed.filter((e) => e !== payload),\r\n      };\r\n    }\r\n    case actionTypes.add.unconfirmed: {\r\n      return {\r\n        ...state,\r\n        confirmed: state.confirmed.filter((e) => e !== payload),\r\n        excluded: state.excluded.filter((e) => e !== payload),\r\n        unconfirmed: addWithoutDuplicates(state.unconfirmed, payload),\r\n      };\r\n    }\r\n    case actionTypes.reset: {\r\n      return INITIAL_STATE.evidence;\r\n    }\r\n    case actionTypes.toggleGhostEvidence: {\r\n      const confirmed = state.ghosts\r\n        .filter((ghost) => ghost.name === payload.ghostName)\r\n        .map((ghost) => ghost.evidence)\r\n        .flat();\r\n\r\n      if (\r\n        state.validGhosts.length === 1 &&\r\n        state.validGhosts.includes(payload.ghostName)\r\n      ) {\r\n        return {\r\n          ...state,\r\n          confirmed: [],\r\n          excluded: [],\r\n          unconfirmed: state.all,\r\n        };\r\n      }\r\n\r\n      const excluded = state.all.filter((e) => !confirmed.includes(e));\r\n\r\n      return {\r\n        ...state,\r\n        confirmed,\r\n        excluded,\r\n        unconfirmed: [],\r\n      };\r\n    }\r\n    case actionTypes.validate: {\r\n      let validEvidence = [];\r\n      let validGhosts = [];\r\n      if (\r\n        state.unconfirmed.length === 1 &&\r\n        state.unconfirmed.includes(payload)\r\n      ) {\r\n        validEvidence = [\r\n          ...new Set(\r\n            state.ghosts\r\n              .filter((ghost) =>\r\n                state.confirmed.every((e) => ghost.evidence.includes(e))\r\n              )\r\n              .map((ghost) => ghost.evidence)\r\n              .flat()\r\n          ),\r\n        ];\r\n        validGhosts = [\r\n          state.ghosts\r\n            .filter((ghost) =>\r\n              state.confirmed.every((e) => ghost.evidence.includes(e))\r\n            )\r\n            .map((ghost) => ghost.name),\r\n        ].flat();\r\n      } else {\r\n        validEvidence = [\r\n          ...new Set(\r\n            state.ghosts\r\n              .filter(\r\n                (ghost) =>\r\n                  state.confirmed.every((e) => ghost.evidence.includes(e)) &&\r\n                  state.excluded.every((e) => !ghost.evidence.includes(e))\r\n              )\r\n              .map((ghost) => ghost.evidence)\r\n              .flat()\r\n          ),\r\n        ];\r\n        validGhosts = [\r\n          state.ghosts\r\n            .filter(\r\n              (ghost) =>\r\n                state.confirmed.every((e) => ghost.evidence.includes(e)) &&\r\n                state.excluded.every((e) => !ghost.evidence.includes(e))\r\n            )\r\n            .map((ghost) => ghost.name),\r\n        ].flat();\r\n      }\r\n\r\n      if (validEvidence.length === 0) {\r\n        return {\r\n          ...state,\r\n          validGhosts: [],\r\n        };\r\n      }\r\n\r\n      const payloadExcluded = (e) =>\r\n        e === payload && state.excluded.includes(payload);\r\n\r\n      const excluded = state.all.filter(\r\n        (e) =>\r\n          (payloadExcluded(e) && state.excluded.includes(e)) ||\r\n          !validEvidence.includes(e)\r\n      );\r\n\r\n      const unconfirmed = state.all.filter(\r\n        (e) =>\r\n          e.name !== payload &&\r\n          !state.confirmed.includes(e) &&\r\n          !excluded.includes(e)\r\n      );\r\n      const confirmed = state.all.filter(\r\n        (e) => !unconfirmed.includes(e) && !excluded.includes(e)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        excluded,\r\n        unconfirmed,\r\n        confirmed,\r\n        validGhosts,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const useEvidence = () => {\r\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE.evidence);\r\n\r\n  const incrementStatus = (payload) => {\r\n    if (state.confirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.excluded });\r\n    }\r\n\r\n    if (state.excluded.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.unconfirmed });\r\n    }\r\n\r\n    if (state.unconfirmed.includes(payload)) {\r\n      dispatch({ payload, type: actionTypes.add.confirmed });\r\n    }\r\n\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const toggleGhostEvidence = (payload) => {\r\n    dispatch({ payload, type: actionTypes.toggleGhostEvidence });\r\n    dispatch({ payload, type: actionTypes.validate });\r\n  };\r\n\r\n  const resetEvidence = () => dispatch({ type: actionTypes.reset });\r\n\r\n  return {\r\n    incrementStatus,\r\n    resetEvidence,\r\n    state,\r\n    toggleGhostEvidence,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport pkgJson from \"../package.json\";\r\nimport { Ghosts } from \"./components/Ghosts\";\r\nimport { Evidence } from \"./components/Evidence\";\r\nimport { Reset } from \"./components/Reset\";\r\nimport { Secondary } from \"./components/Secondary\";\r\nimport { useGhosts } from \"./reducers/useGhosts\";\r\nimport { useEvidence } from \"./reducers/useEvidence\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const evidence = useEvidence();\r\n  const ghosts = useGhosts();\r\n  const backgroundClass = React.useMemo(() => {\r\n    let opacities = [];\r\n    for (let i = 0; i <= 100; i += 9) {\r\n      opacities = [...opacities, i];\r\n    }\r\n    opacities.reverse();\r\n    const ghostCount = evidence.state.validGhosts.length - 1;\r\n    const index = ghostCount >= 0 && ghostCount < 12 ? ghostCount : 11;\r\n\r\n    return `opacity-${opacities[index]}`;\r\n  }, [evidence.state.validGhosts]);\r\n  return (\r\n    evidence &&\r\n    ghosts && (\r\n      <React.Fragment>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">Phasmophobia Evidence Matrix</header>\r\n          <section data-testid=\"test-evidence\" className=\"App-section-evidence\">\r\n            <Evidence evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section data-testid=\"test-ghosts\" className=\"App-section-ghosts\">\r\n            <Ghosts evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section className=\"App-section-secondary-evidence\">\r\n            <Secondary evidence={evidence} ghosts={ghosts} />\r\n          </section>\r\n          <section className=\"App-section-controls\">\r\n            <Reset ghosts={ghosts} evidence={evidence} />\r\n          </section>\r\n          <section className=\"App-section-version\">\r\n            beta version {pkgJson.version}\r\n          </section>\r\n        </div>\r\n        <div\r\n          className={classNames({\r\n            \"App-background\": true,\r\n            [backgroundClass]: backgroundClass,\r\n          })}\r\n        ></div>\r\n      </React.Fragment>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}